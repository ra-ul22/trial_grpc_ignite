# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import tableCRUD_pb2 as tableCRUD__pb2


class tableCRUDStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.creatingTable = channel.unary_unary(
                '/tableCRUD/creatingTable',
                request_serializer=tableCRUD__pb2.createTable_request.SerializeToString,
                response_deserializer=tableCRUD__pb2.createTable_response.FromString,
                )
        self.deletingTable = channel.unary_unary(
                '/tableCRUD/deletingTable',
                request_serializer=tableCRUD__pb2.deleteTable_request.SerializeToString,
                response_deserializer=tableCRUD__pb2.createTable_response.FromString,
                )


class tableCRUDServicer(object):
    """Missing associated documentation comment in .proto file."""

    def creatingTable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deletingTable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_tableCRUDServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'creatingTable': grpc.unary_unary_rpc_method_handler(
                    servicer.creatingTable,
                    request_deserializer=tableCRUD__pb2.createTable_request.FromString,
                    response_serializer=tableCRUD__pb2.createTable_response.SerializeToString,
            ),
            'deletingTable': grpc.unary_unary_rpc_method_handler(
                    servicer.deletingTable,
                    request_deserializer=tableCRUD__pb2.deleteTable_request.FromString,
                    response_serializer=tableCRUD__pb2.createTable_response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'tableCRUD', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class tableCRUD(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def creatingTable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tableCRUD/creatingTable',
            tableCRUD__pb2.createTable_request.SerializeToString,
            tableCRUD__pb2.createTable_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deletingTable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/tableCRUD/deletingTable',
            tableCRUD__pb2.deleteTable_request.SerializeToString,
            tableCRUD__pb2.createTable_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
